{"version":3,"sources":["components/Header.js","components/NotFound.js","components/Forbidden.js","components/UnhandledError.js","components/Courses.js","components/Form.js","components/CreateCourse.js","components/UpdateCourse.js","components/CourseDetail.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","config.js","Data.js","Context.js","PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","authUser","context","authenticatedUser","className","firstName","lastName","to","NotFound","Forbidden","UnhandledError","Courses","useState","data","setData","isLoading","setIsLoading","history","useHistory","useEffect","fetch","then","response","ok","json","Error","catch","err","console","log","push","map","dat","id","title","version","xmlns","x","y","viewBox","points","ErrorsDisplay","errors","errorsDisplay","length","error","i","Form","cancel","submit","submitButtonText","elements","onSubmit","event","preventDefault","type","onClick","CreateCourse","description","estimatedTime","materialsNeeded","state","setState","change","target","name","value","prevState","pathname","userId","email","password","course","createCourse","placeholder","onChange","UpdateCourse","setLoading","useParams","authUserId","status","User","ownerId","message","updateCourse","ReactMarkdown","require","CourseDetail","idMatch","deleteCourse","source","UserSignIn","emailAddress","from","location","actions","signIn","user","this","Fragment","Component","UserSignUp","createUser","confirmPassword","UserSignOut","signOut","config","apiBaseUrl","Data","path","method","body","requiresAuth","credentials","url","options","headers","JSON","stringify","encodedCredentials","btoa","api","Context","React","createContext","Provider","Cookies","getJSON","a","getUser","set","expires","remove","children","Consumer","withContext","PrivateRoute","component","rest","render","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","HeaderWithContext","CreateCourseWithContext","UpdateCourseWithContext","CourseDetailWithContext","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ee24f721.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n    const { context } = props;\r\n    const authUser = context.authenticatedUser;\r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    <div className=\"bounds\">\r\n                        <h1 className=\"header--logo\">Courses</h1>\r\n                        <nav>\r\n                            {\r\n                                authUser ?\r\n                                <>\r\n                                <span>Welcome, {authUser.firstName} {authUser.lastName} </span>\r\n                                <NavLink to=\"/signout\" className=\"signout\">Sign Out</NavLink>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <NavLink to=\"/signup\" className=\"signup\">Sign Up</NavLink>\r\n                                    <NavLink to=\"/signin\" className=\"signin\">Sign In</NavLink>\r\n                                </>\r\n                            }\r\n                        </nav> \r\n                    </div>\r\n                </div>\r\n                <hr></hr> \r\n            </>\r\n        );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound =  () => (\r\n    <div className=\"bounds\">\r\n        <h1> Not Found</h1>\r\n        <p>Sorry! We couldn't find the page you're looking for.</p>\r\n        <span>\r\n            <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Forbidden =  () => (\r\n    <div className=\"bounds\">\r\n        <h1>Forbidden</h1>\r\n        <p>Oh oh! You can't access this page.</p>\r\n        <span>\r\n            <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default Forbidden;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UnhandledError = () => (\r\n        <div className=\"bounds\">\r\n            <h1>Error</h1>\r\n            <p>Sorry! We just encountered an unexpected error.</p>\r\n            <span>\r\n                <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\r\n            </span>\r\n        </div>\r\n    );\r\n\r\nexport default UnhandledError;","import React, { useEffect , useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Courses = () => {\r\n\r\n    const [data, setData] =  useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const history = useHistory();\r\n    \r\n    useEffect(()=> {\r\n      fetch('http://localhost:5000/api/courses')\r\n      .then(response => {\r\n            if(response.ok) {\r\n                return response.json();\r\n            } else {\r\n                throw new Error('Internal Error');\r\n            }       \r\n        })\r\n      .then(data => setData(data))\r\n      .then(() => setIsLoading(false))\r\n      .catch(err => {\r\n        console.log('Oh no!', err);\r\n        history.push('/error');\r\n        })\r\n    }, [history]);\r\n\r\n    return(\r\n        <div className=\"bounds\">\r\n            {\r\n                isLoading\r\n                ?<p>Loading...</p>\r\n                : data.map( dat => {\r\n                    return(\r\n                        <div className=\"grid-33\" key={dat.id}>\r\n                            <Link className=\"course--module course--link\" to={\"/courses/\" + dat.id}>\r\n                                <h4 className=\"course--label\">Course</h4>\r\n                                <h3 className=\"course--title\">{dat.title}</h3>\r\n                            </Link>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            <div className=\"grid-33\">\r\n                <Link className=\"course--module course--add--module\" to=\"/courses/create\">\r\n                    <h3 className=\"course--add--title\">\r\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 13 13\" className=\"add\">\r\n                            <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n                        </svg>New Course\r\n                    </h3>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Courses;","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    const {\r\n        cancel,\r\n        errors,\r\n        submit,\r\n        submitButtonText,\r\n        elements,\r\n    } = props;\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        submit();\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        event.preventDefault();\r\n        cancel();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ErrorsDisplay errors={errors} />\r\n            <form onSubmit={handleSubmit}>\r\n                {elements()}\r\n                <div className=\"grid-100 pad-bottom\">\r\n                    <button className=\"button\" type=\"submit\">{submitButtonText}</button>\r\n                    <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ErrorsDisplay({ errors }) {\r\n    let errorsDisplay = null;\r\n\r\n    if (errors.length) {\r\n        errorsDisplay = (\r\n            <div>\r\n                <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n                <div className=\"validation-errors\">\r\n                    <ul>\r\n                        {errors.map((error, i) => <li key={i}>{error}</li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return errorsDisplay;\r\n}\r\n\r\nexport default Form;","import React, {useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nconst CreateCourse = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [state, setState] = useState(\r\n        {\r\n            title: \"\",\r\n            description: \"\",\r\n            estimatedTime: \"\",\r\n            materialsNeeded: \"\",\r\n            errors: [],\r\n        }\r\n    );\r\n\r\n    // Unpack state object properties via destructuring\r\n    const { \r\n        title,\r\n        description,\r\n        estimatedTime,\r\n        materialsNeeded,\r\n        errors,\r\n    } = state;\r\n\r\n    // Clicking on the 'Cancel' button invokes this function which routes the user back to the 'homepage' via the useHistory hook\r\n    const cancel = () => {\r\n        history.push({\r\n            pathname: \"/\",\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handle the submit action by sending a POST request to the API with the course that needs to be created and its details.\r\n     * \r\n     */\r\n    const submit = () => {\r\n\r\n        const { context } = props;\r\n        // Retrieve the required property userId from context to later pass it to the API in the course object\r\n        const userId = context.authenticatedUser.id;\r\n        // Retrieve the email and password properties from context via destructuring.\r\n        const {email, password} = context.authenticatedUser;\r\n        // Unpack state object properties via destructuring to use them to create the course object below which is then passed to the API in the request\r\n        const {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded\r\n        } = state;\r\n        // Create the course object and provide it the required properties for a succesfull request to the API\r\n        const course = {\r\n            title,\r\n            description,\r\n            userId,\r\n            estimatedTime,\r\n            materialsNeeded,\r\n        };\r\n\r\n        /**\r\n         * Call the createCourse method from Data.js via context\r\n         * Pass it the required details\r\n         * createCourse sends a POST request with the details and if no errors occur the API creates the course\r\n         */\r\n        context.data.createCourse(course, email, password)\r\n        .then((errors) => {\r\n            if(errors.length) {\r\n                setState({errors});\r\n            }\r\n            else {\r\n                console.log(`Course created`);\r\n                history.push('/');\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            history.push('/error');\r\n        })\r\n    }\r\n\r\n    // When the input fields or text area's value changes this function is triggered and it updates the state property with the current value of the fields\r\n    const change = (event) => {\r\n        const { name, value } = event.target;\r\n        \r\n        setState( prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    const { context } = props;\r\n    // Retrieve the firstName and lastName properties from context via destructuring.\r\n    const {firstName, lastName} = context.authenticatedUser;\r\n\r\n    return(\r\n        <div className=\"bounds course-detail\">\r\n            <h1>Create Course</h1>\r\n            <Form \r\n                cancel={cancel}\r\n                errors={errors}\r\n                submit={submit}\r\n                submitButtonText=\"Create Course\"\r\n                elements={()=> (\r\n                    <>\r\n                        <div className=\"grid-66\">\r\n                            <div className=\"course--header\">\r\n                                <h4 className=\"course--label\">Course</h4>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"title\"\r\n                                        name=\"title\"\r\n                                        type=\"text\"\r\n                                        className=\"input-title course--title--input\"\r\n                                        placeholder=\"Course title...\"\r\n                                        value={title || ''} // Added the {title || ''} as otherwise there would be an error as the input's value is initially uncontorlled due to state being undefined\r\n                                        onChange={change} //Call the change function\r\n                                    />\r\n                                </div>\r\n                                <p>By {firstName} {lastName} </p>\r\n                            </div>\r\n                            <div className=\"course--description\">\r\n                                <div>\r\n                                    <textarea\r\n                                        id=\"description\"\r\n                                        name=\"description\"\r\n                                        placeholder=\"Course description...\"\r\n                                        value={description || ''}\r\n                                        onChange={change}\r\n                                    ></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid-25 grid-right\">\r\n                            <div className=\"course--stats\">\r\n                                <ul className=\"course--stats--list\">\r\n                                    <li className=\"course--stats--list--item\">\r\n                                        <h4>Estimated Time</h4>\r\n                                        <div>\r\n                                            <input \r\n                                                id=\"estimatedTime\"\r\n                                                name=\"estimatedTime\"\r\n                                                type=\"text\"\r\n                                                className=\"course--time--input\"\r\n                                                placeholder=\"Hours\"\r\n                                                value={estimatedTime || ''} \r\n                                                onChange={change}\r\n                                            />\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"course--stats--list--item\">\r\n                                        <h4>Materials Needed</h4>\r\n                                        <div>\r\n                                            <textarea\r\n                                                id=\"materialsNeeded\"\r\n                                                name=\"materialsNeeded\"\r\n                                                placeholder=\"List Materials...\"\r\n                                                value={materialsNeeded || ''}\r\n                                                onChange={change}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default CreateCourse;","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\n\r\nconst UpdateCourse = (props) => {\r\n\r\n    const history = useHistory();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [state, setState] = useState(\r\n        {\r\n            title: \"\",\r\n            description: \"\",\r\n            estimatedTime: \"\",\r\n            materialsNeeded: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            errors: [],\r\n        }\r\n    );\r\n    let { id }  = useParams();\r\n\r\n    const { context } = props;\r\n    const authUserId = context.authenticatedUser.id;\r\n    const {email, password} = context.authenticatedUser\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('http://localhost:5000/api/courses/' + id)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            else if (response.status === 404){\r\n                throw new Error(404);\r\n            }\r\n        })\r\n        .then(state => {\r\n            // Check if the authenticated user is the owner of the course.\r\n            // If he is not throw an error that will redirect him to the 'forbidden' path otherwise proceed with the rest of the actions\r\n            if(authUserId !== state.userId) {\r\n                throw new Error('forbidden');\r\n            }\r\n            else {\r\n                setState((prevState)=> ({\r\n                    ...prevState,\r\n                    title: state.title,\r\n                    description: state.description,\r\n                    estimatedTime: state.estimatedTime,\r\n                    materialsNeeded: state.materialsNeeded,\r\n                    firstName: state.User.firstName,\r\n                    lastName: state.User.lastName,\r\n                    ownerId: state.userId,\r\n                }))\r\n            }\r\n        })\r\n        .then(() => setLoading(false))\r\n        .catch(err => {\r\n            if (err.message === '404' ) {\r\n                history.push('/notfound');\r\n            } else if (err.message === 'forbidden') {\r\n                history.push('/forbidden');\r\n            }\r\n            else {\r\n                history.push('/error');   \r\n            }\r\n        })\r\n        \r\n\r\n    }, [id, history, authUserId]);\r\n\r\n    const { \r\n        title,\r\n        description,\r\n        estimatedTime,\r\n        materialsNeeded,\r\n        firstName,\r\n        lastName,\r\n        errors,\r\n    } = state;\r\n\r\n    const cancel = () => {\r\n        history.push({\r\n            pathname: `/courses/${id}`,\r\n        });\r\n    }\r\n\r\n    const change = (event) => {\r\n        const { name, value } = event.target;\r\n        \r\n        setState( prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    const submit = () => {\r\n\r\n        const {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded,\r\n        } = state;\r\n\r\n        const course = {\r\n            title,\r\n            description,\r\n            authUserId,\r\n            estimatedTime,\r\n            materialsNeeded,\r\n        };\r\n\r\n        /**\r\n         * Call the updateCourse method from Data.js via context\r\n         * Pass it the required details (course object, the user's credentials and the id of the course)\r\n         * updateCourse sends a PUT request with the details and if no errors occur the API updates the course\r\n         */\r\n        context.data.updateCourse(course, email, password, id)\r\n        .then((errors) => {\r\n            if(errors.length) {\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    errors,\r\n                }));\r\n            }\r\n            else {\r\n                console.log(`Course updated`);\r\n                history.push('/');\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            history.push('/error');\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"bounds course-detail\">\r\n            <h1>Update Course</h1>\r\n            <Form\r\n                cancel={cancel}\r\n                errors={errors}\r\n                submit={submit}\r\n                submitButtonText=\"Update Course\"\r\n                elements={() => (\r\n                    <>\r\n                    {\r\n                        isLoading\r\n                        ? <p>Loading...</p>\r\n                        : <>\r\n                            <div className=\"grid-66\">\r\n                                <div className=\"course--header\">\r\n                                    <h4 className=\"course--label\">Course</h4>\r\n                                    <div>\r\n                                        <input \r\n                                            id=\"title\"\r\n                                            name=\"title\"\r\n                                            type=\"text\"\r\n                                            className=\"input-title course--title--input\"\r\n                                            placeholder=\"Course title...\"\r\n                                            value={title} // TO BE CHANGED TO DYNAMIC VALUE TAKEN FROM THE COURSE\r\n                                            onChange={change}\r\n                                        />\r\n                                    </div>\r\n                                    <p>By: {firstName} {lastName}</p>\r\n                                </div>\r\n                                <div className=\"course--description\">\r\n                                    <div>\r\n                                        <textarea id=\"description\" name=\"description\" placeholder=\"Course description...\" value={description} onChange={change}></textarea>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid-25 grid-right\">\r\n                                <div className=\"course--stats\">\r\n                                    <ul className=\"course--stats--list\">\r\n                                        <li className=\"course--stats--list--item\">\r\n                                            <h4>Estimated Time</h4>\r\n                                            <div>\r\n                                                <input \r\n                                                    id=\"estimatedTime\"\r\n                                                    name=\"estimatedTime\"\r\n                                                    type=\"text\"\r\n                                                    className=\"course--time--input\"\r\n                                                    placeholder=\"Hours\"\r\n                                                    value={estimatedTime}\r\n                                                    onChange={change}\r\n                                                />\r\n                                            </div>\r\n                                        </li>\r\n                                        <li className=\"course--stats--list--item\">\r\n                                            <h4>Materials Needed</h4>\r\n                                            <div>\r\n                                                <textarea \r\n                                                id=\"materialsNeeded\" \r\n                                                name=\"materialsNeeded\" \r\n                                                placeholder=\"List materials...\" \r\n                                                value={materialsNeeded}\r\n                                                onChange={change}>\r\n                                                </textarea>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </>    \r\n                    }\r\n                    </>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateCourse;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nconst ReactMarkdown = require('react-markdown');\r\n\r\nconst CourseDetail = (props) => {\r\n    const [data, setData] = useState('');\r\n    const [isLoading, setLoading] = useState(true);\r\n    let { id }  = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('http://localhost:5000/api/courses/' + id)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            else if (response.status === 404){\r\n                throw new Error(404);\r\n            }\r\n            else {\r\n                throw new Error('Internal Error');\r\n            }\r\n        })\r\n        .then(data => setData(data))\r\n        .then(() => setLoading(false))\r\n        .catch(err => {\r\n            if (err.message === '404' ) {\r\n                history.push('/notfound');\r\n            }\r\n            else {\r\n                history.push('/error');   \r\n            }\r\n        })\r\n    }, [id, history]);\r\n\r\n    const { context } = props;\r\n    \r\n    // To be used for checking if the authenticated user's id matches the id of the user who created / owns the course\r\n    let idMatch;\r\n\r\n    const deleteCourse = () => {\r\n        const {email, password} = context.authenticatedUser;\r\n        context.data.deleteCourse(email, password, id)\r\n        .then(() => {\r\n            history.push('/');\r\n        })\r\n        .catch(() => history.push('/error'));\r\n    }\r\n    return(\r\n        <div>\r\n            <div className=\"actions--bar\">\r\n                <div className=\"bounds\">\r\n                    <div className=\"grid-100\">\r\n                        {   \r\n                            // Set the value of idMatch if there is an authenticated user\r\n                            context.authenticatedUser\r\n                            ? idMatch = context.authenticatedUser.id === data.userId\r\n                            : idMatch = false\r\n                        }\r\n                        {\r\n                            // Render the 'Update Course' & 'Delete Course' buttons if there is an authenticated user and his ID matches that of the user who owns the course\r\n                            context.authenticatedUser && idMatch\r\n                            ? <span>\r\n                                <Link className=\"button\" to={\"/courses/\" + id + \"/update\"}>Update Course</Link>\r\n                                <button className=\"button\" onClick={deleteCourse}>Delete Course</button>\r\n                                <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\r\n                            </span>\r\n                            : <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isLoading\r\n                ? <p>Loading...</p>\r\n                : <div className=\"bounds course--detail\">\r\n                    <div className=\"grid-66\">\r\n                        <div className=\"course--header\">\r\n                            <h4 className=\"course--label\">Course</h4>\r\n                            <h3 className=\"course--title\">{data.title}</h3>\r\n                            <p>By {data.User.firstName } {data.User.lastName}</p>\r\n                        </div>\r\n                        <div className=\"course--description\">\r\n                            <ReactMarkdown source={data.description} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid-25 grid-right\">\r\n                        <div className=\"course--stats\">\r\n                            <ul className=\"course--stats--list\">\r\n                                <li className=\"course--stats--list--item\">\r\n                                    <h4>Estimated Time</h4>\r\n                                    <h3>{data.estimatedTime}</h3>\r\n                                </li>\r\n                                <li className=\"course--stats--list--item\">\r\n                                    <h4>Materials Needed</h4>\r\n                                    <ul>\r\n                                        <ReactMarkdown source={data.materialsNeeded} />\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseDetail;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignIn extends Component {\r\n    state = {\r\n        emailAddress: '',\r\n        password: '',\r\n        errors: [],\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            emailAddress,\r\n            password,\r\n            errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"bounds\">\r\n                <div className=\"grid-33 centered signin\">\r\n                    <h1>Sign In</h1>\r\n                    <Form \r\n                        cancel={this.cancel}\r\n                        submit={this.submit}\r\n                        errors={errors}\r\n                        submitButtonText=\"SignIn\"\r\n                        elements={() => (\r\n                            <React.Fragment>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"emailAddress\"\r\n                                        name=\"emailAddress\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Email Address\"\r\n                                        value={emailAddress}\r\n                                        onChange={this.change}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={this.change}\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                    <p>&nbsp;</p>\r\n                    <p>Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Update state based on the value of the input fields\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState(() => {\r\n            return {\r\n                [name] : value\r\n            };\r\n        });\r\n    }\r\n\r\n    // Handle form submit\r\n    submit = () => {\r\n        const { context } = this.props;\r\n        // Access 'from' via this.props.location.state.from\r\n        const { from } = this.props.location.state || { from: {pathname: '/'} }\r\n        const { emailAddress, password } = this.state;\r\n        context.actions.signIn(emailAddress, password)\r\n        .then( user => {\r\n            // Check if the returned promise value is equal to null (meaning the response  is a 400 status)\r\n            if (user === null) {\r\n                this.setState(() => {\r\n                    return { errors: ['Sign-in was unsuccessful'] };\r\n                })\r\n            } else {\r\n                // Redirect user after a successfull sing-in to the previous screen\r\n                this.props.history.push(from);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            this.props.history.push('/error');\r\n        })\r\n    }\r\n\r\n\r\n    // Route user back to the main page\r\n    cancel = () => {\r\n        this.props.history.push('/');\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignUp extends Component {\r\n    state = {\r\n        'firstName': '',\r\n        'lastName': '',\r\n        'emailAddress': '',\r\n        'password': '',\r\n        'confirmPassword': '',\r\n        'errors': [],\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n            confirmPassword,\r\n            errors\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className=\"bounds\">\r\n                <div className=\"grid-33 centered signin\">\r\n                    <h1>Sign Up</h1>\r\n                    <Form \r\n                        cancel={this.cancel}\r\n                        errors={errors}\r\n                        submit={this.submit}\r\n                        submitButtonText=\"Sign Up\"\r\n                        elements={() => (\r\n                            <React.Fragment>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"firstName\"\r\n                                        name=\"firstName\"\r\n                                        type=\"text\"\r\n                                        className=\"\"\r\n                                        value={firstName}\r\n                                        onChange={this.change}\r\n                                        placeholder=\"First Name\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"lastName\"\r\n                                        name=\"lastName\"\r\n                                        type=\"text\"\r\n                                        className=\"\"\r\n                                        value={lastName}\r\n                                        onChange={this.change}\r\n                                        placeholder=\"Last Name\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"emailAddress\"\r\n                                        name=\"emailAddress\"\r\n                                        type=\"text\"\r\n                                        className=\"\"\r\n                                        value={emailAddress}\r\n                                        onChange={this.change}\r\n                                        placeholder=\"Email Address\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        className=\"\"\r\n                                        value={password}\r\n                                        onChange={this.change}\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"confirmPassword\"\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        className=\"\"\r\n                                        value={confirmPassword}\r\n                                        onChange={this.change}\r\n                                        placeholder=\"Confirm Password\"\r\n                                    />\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                    <p>&nbsp;</p>\r\n                    <p>Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    change = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        this.setState(() => {\r\n            return {\r\n                [name] : value\r\n            };\r\n        });\r\n    }\r\n    \r\n    submit = () => {\r\n\r\n        // Destructure props and state\r\n        const { context } = this.props;\r\n\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n        } = this.state;\r\n\r\n        // New user payload to pass to createUser()\r\n        const user = {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n        };\r\n        \r\n        // Ensure errors array in state is clear to avoid accumulation of errors in the array when submiting multiple times with incomplete / invalid data\r\n        this.setState({\r\n            errors: [],\r\n        })\r\n\r\n        context.data.createUser(user)\r\n        .then(errors => {\r\n            if(this.state.password !== this.state.confirmPassword){\r\n                this.setState({\r\n                    errors: [ ...this.state.errors ,\"Passwords don't match!\"]\r\n                })\r\n            }\r\n            if (errors.length) {\r\n                this.setState({ \r\n                    errors: [ ...this.state.errors, ...errors]\r\n                });\r\n            }\r\n            else {\r\n                // Sign the user in and navigate him to the main page\r\n                context.actions.signIn(emailAddress, password)\r\n                .then(() => {\r\n                    this.props.history.push('/');\r\n                })\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n            this.props.history.push('/error');\r\n        })\r\n\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/');\r\n    }\r\n}","import React, {useEffect} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst UserSignOut = ({ context }) => {\r\n\r\n    useEffect(() => context.actions.signOut());\r\n    \r\n    return(\r\n        <Redirect to=\"/\" />\r\n    );\r\n};\r\n\r\nexport default UserSignOut;","const config = {\r\n    apiBaseUrl: 'http://localhost:5000/api',\r\n};\r\n\r\nexport default config;","import config from './config';\r\n\r\nexport default class Data {\r\n    api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\r\n        const url = config.apiBaseUrl + path;\r\n\r\n        const options = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8',\r\n            },\r\n        };\r\n\r\n        if (body !== null) {\r\n            options.body = JSON.stringify(body);\r\n        }\r\n\r\n        if (requiresAuth) {\r\n            // Encode credentials\r\n            const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\r\n            // Set the authorization header\r\n            options.headers['Authorization'] = `Basic ${encodedCredentials}`;\r\n        }\r\n\r\n        return fetch(url, options);\r\n    }\r\n\r\n    async getUser(emailAddress, password) {\r\n        const response = await this.api('/users', 'GET', null, true, {emailAddress, password});\r\n        if (response.status === 200) {\r\n            return response.json().then(data => data);\r\n        }\r\n        else if (response.status === 401) {\r\n            return null;\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    async createUser(user) {\r\n        const response = await this.api('/users', 'POST', user);\r\n        if (response.status === 201) {\r\n            return [];\r\n        }\r\n        else if (response.status === 400) {\r\n            return response.json().then(data => {\r\n                return data.errors;\r\n            });\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    // Send a POST request to the API with the body containing the course object and the credentials to authenticate the user\r\n    async createCourse(course, emailAddress, password) {\r\n        const response = await this.api('/courses', 'POST', course, true, {emailAddress, password});\r\n        if(response.status === 201 ) {\r\n            return [];\r\n        }\r\n        else if (response.status === 400) {\r\n            return response.json().then(data => {\r\n                return data.errors;\r\n            });\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    // Send a PUT request to the API with the body containing the course object, the credentials and the id of the course\r\n    async updateCourse(course, emailAddress, password, id) {\r\n        const response = await this.api(`/courses/${id}`, 'PUT', course, true, {emailAddress, password});\r\n        if(response.status === 204) {\r\n            return [];\r\n        }\r\n        else if (response.status === 400) {\r\n            return response.json().then(data => {\r\n                return data.errors;\r\n            })\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    // Send a DELETE request to the API with the credentials and the id of the course\r\n    async deleteCourse(emailAddress, password, id) {\r\n        const response = await this.api(`/courses/${id}`, 'DELETE', null, true, {emailAddress, password});\r\n        if(response.status === 204) {\r\n            return [];\r\n        }\r\n        else {\r\n            throw new Error();\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport Data from './Data';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.data = new Data();\r\n    }\r\n\r\n    state= {\r\n        authenticatedUser: Cookies.getJSON('authenticatedUser') || null\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        const { authenticatedUser } = this.state;\r\n\r\n        // Provide the utility methods of the Data class \r\n        const value = {\r\n            authenticatedUser,\r\n            data: this.data,\r\n            // Pass the Provider's value prop an actions object to store any event handlers/actions to be performed on data that is passed down through context\r\n            actions: {\r\n                signIn: this.signIn,\r\n                signOut: this.signOut,\r\n            }\r\n        };\r\n\r\n        return(\r\n            // value is the object containg the context to be shared throughout the component tree\r\n            <Context.Provider value={value}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n\r\n    // Uses the credentials to call the getUser() method in Data.js which returns the user data\r\n    signIn = async (emailAddress, password) => {\r\n        /**\r\n         * //The returned promise of below user variable will be an object like:\r\n         * { firstName: \"John\", lastName: \"Doe\", emailAddress: \"john.doe@doe.com\"}\r\n         */\r\n        const user = await this.data.getUser(emailAddress, password); \r\n        if (user !== null) {\r\n            user.password = password;\r\n            this.setState(() => {\r\n                return {\r\n                    authenticatedUser: user,\r\n                }\r\n            })\r\n            Cookies.set('authenticatedUser', JSON.stringify(user), { expires: 1 });\r\n        }\r\n        return user;\r\n    }\r\n\r\n    signOut = () => {\r\n        this.setState({ authenticatedUser: null });\r\n        Cookies.remove('authenticatedUser');\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\n/**\r\n * A higher-order component that wraps the provided component in a Context Consumer component.\r\n * @param {class} Component - A React component.\r\n * @returns {function} A higher-order component.\r\n*/\r\n\r\nexport default function withContext(Component) {\r\n    return function ContextComponent(props) {\r\n        return(\r\n            <Context.Consumer>\r\n                {context => <Component {...props} context={context} />}\r\n            </Context.Consumer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\n// Destructure and rename the component prop, collect any other passed props in the '...rest' variable\r\nconst PrivateRoute =  ({ component: Component, ...rest }) => {\r\n    return (\r\n        // Consumer component subscribes PrivateRoute to all actions and data provided by Context.js\r\n        <Consumer>\r\n            {context => (\r\n                <Route \r\n                    {...rest}\r\n                    render={props => context.authenticatedUser ? (\r\n                            <   Component {...props} />\r\n                        ) : (\r\n                            <Redirect to={{\r\n                                pathname: '/signin',\r\n                                // The state property holds the info about the user's current location\r\n                                // If authentication is successful, the router can redirect to the original location - from: props.location\r\n                                state: { from: props.location }, // current location of the route the user tried to access\r\n                            }} />\r\n                        )\r\n                    }\r\n                />\r\n            )}\r\n        </Consumer>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport NotFound from './components/NotFound';\nimport Forbidden from './components/Forbidden';\nimport UnhandledError from './components/UnhandledError';\nimport Courses from './components/Courses';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport CourseDetail from './components/CourseDetail';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignOut from './components/UserSignOut';\nimport PrivateRoute from './PrivateRoute';\n\nimport withContext from './Context';\n\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst HeaderWithContext = withContext(Header);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\nconst CourseDetailWithContext = withContext(CourseDetail);\n\n\nfunction App() { \n  return (\n    <Router>\n      <div>\n        <HeaderWithContext />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Courses />} />\n          <PrivateRoute exact path=\"/courses/create\" component={CreateCourseWithContext} />\n          <PrivateRoute exact path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n          <Route exact path=\"/courses/:id\" component={CourseDetailWithContext} />\n          <Route path=\"/signup\" component={UserSignUpWithContext} />\n          <Route path=\"/signin\" component={UserSignInWithContext} />\n          <Route path=\"/signout\" component={UserSignOutWithContext} />\n          <Route path=\"/notfound\" component={NotFound} />\n          <Route path=\"/forbidden\" component={Forbidden}/>\n          <Route path=\"/error\" component={UnhandledError} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </Router>    \n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from './Context';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}